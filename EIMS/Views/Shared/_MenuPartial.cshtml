<style type="text/css">
    /*Added css for design notification area, you can design by your self*/
    /* COPY css content from youtube video description*/
    .noti-content {
        display: none;
        max-height: 450px;
        overflow-y: scroll;
    }



    span.noti {
        color: #faffff;
        margin: 15px;
        right: 100px;
        font-size: 18px;
        cursor: pointer;
    }

    span.count {
        position: relative;
        top: -13px;
        left: -18px;
        font-size: 13px;
        color: red;
    }
</style>



<nav class="navbar navbar-inverse ">
    <div class="container-fluid">
        <div class="navbar-header">
            
                @*<a href="/Home/HomePage">
                   
                    <img src="~/Content/images/lol.png" />

                </a>*@
                <a  class="navbar-brand glyphicon glyphicon-home"  href="/Home/HomePage"></a>
             
        </div>
        <input type="hidden" id="txtRoleId" value="@HttpContext.Current.Session["RoleId"]" />
        <ul class="nav navbar-nav">
            @if (HttpContext.Current.Session["MenuMaster"] != null)
            {

                var MenuMaster = (List<EIMS.Models.MenuModel>)Session["MenuMaster"];
                var groupByMenu = MenuMaster.GroupBy(x => x.MainMenuName).ToList();

                foreach (var MenuList in groupByMenu)
                {

                    <li class="dropdown">
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#">@MenuList.Key<span class="caret"></span></a>
                        <ul class="dropdown-menu" role="menu">
                            @foreach (var SubMenuList in MenuList)
                            {
                                <li>
                                    <a href="#">
                                        @Html.ActionLink(SubMenuList.SubMenuName, SubMenuList.ActionName, SubMenuList.ControllerName)
                                    </a>
                                </li>
                            }

                        </ul>
               

                    </li>

                }

                <li class="dropdown">
                    <a class="dropdown-toggle" data-toggle="dropdown" href="#">Settings<span class="caret"></span></a>
                    <ul class="dropdown-menu" role="menu">
                      
                            <li>
                                <a href="#" id="ChangePass">
                                   Change My Password
                                </a>
                            </li>
                        @if (int.Parse(@HttpContext.Current.Session["RoleId"].ToString()) == 1)
                        {
                        <li>
                            <a href="#" >
                                @Html.ActionLink("Reset Password", "ResetPassword", "User")
                              
                            </a>
                        </li>
                        }
                    </ul>


                </li>


            }

</ul>
       
        <ul class="nav navbar-nav navbar-right">


            @if (Session["LoginCredentials"] != null)
                    {
                        var loginCredential = (EIMS.Models.LoginModel)Session["LoginCredentials"];


                <input type="hidden" id="username" value="@loginCredential.UserName.Substring(3)" />
                    <input type="hidden" id="userid" value="@loginCredential.UserId" />
                        if (Session["RoleId"].ToString() == "3")
                        {
                    <li class="dropdown">
                        <span class="noti glyphicon glyphicon-bell dropdown-toggle" data-toggle="dropdown"> <span class="count">&nbsp;</span> </span>
                        <ul class="dropdown-menu noti-content" role="menu" id="notiContent"></ul>
                    </li>

                }

                <li style="padding-top:14.5px;color:white">Welcome @loginCredential.UserName</li>
                <li>  @Html.ActionLink("Logout", "LogOff", "Login")</li>


            }
            else
            {
                <li>@Html.ActionLink("Login", "Index", "Login")</li>
            }

        </ul>


    </div>

</nav>

<div class="modal fade" id="mdlChangePassword" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dissmiss="modal" id="btnChnagePassClose"><span aria-hidden="true">×</span></button>

                <h4 class="modal-title" id="myModalLabel">Change Password </h4>
            </div>
            <div class="modal-body">
                <div id="mdlChangePasswordContent"></div>
                <div class="form-group" style="clear:both">
                    <div class="col-md-offset-4 col-md-10">
                        <input type="submit" value="Change" class="btn btn-success" id="btn" />
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>


@* Add jquery code for Get Notification & setup signalr *@
<script type="text/javascript">
    $(document).ready(function () {

        GetNotification();
        $("#ChangePass").click(function () {
            ValidateSession();

            var obj = {
                UserId: $("#userid").val(),
                UserRoleId: $("#txtRoleId").val()


            }
            var options = {
                "backdrop": "static",
                keyboard: true
            };
            $.ajax({
                type: "GET",
                url: "/User/ChangePassword",
                data: obj,
                contentType: "application/json; charset=utf-8",
                datatype: "json",
                success: function (data) {
                    debugger;
                    $('#mdlChangePasswordContent').html(data);
                    $('#mdlChangePassword').modal(options);
                    $('#mdlChangePassword').modal('show');
                },
                error: function () {
                    alert("Content load failed.");
                }
            });
        });
        $("#btnChnagePassClose").click(function () {
            $('#mdlChangePassword').modal('hide');
        });


        $("#btn").click(function () {
            debugger;
            if (Validation()) {
                var obj = {
                    Password: $("#txtNewPass").val(),
                    UserId: $("#userid").val()
                }

                var url = "/User/UpdateUser";
                var data = obj;
                $.post(url, data,
                                function (result) {
                                    $.alert({
                                        title: 'Alert',
                                        content: "Password Updated",
                                        animation: 'none',
                                        type: 'dark'


                                    });

                                });
            }

        });

        var Validation = function () {
            var newPass = $("#txtNewPass").val();
            var conPass = $("#txtConfirmPass").val();
            var errMsg = "";
            if (newPass == "") {
                errMsg += "Enter New Passsword <br>";
            }
            if (conPass == "") {
                errMsg += "Enter Confirm Password <br>";
            }
            if (newPass != "" && conPass != "") {
                if (newPass === conPass) {
                    // errMsg += "Passwords doesn't match<br>";
                }
                else {
                    errMsg += "Passwords doesn't match<br>";
                }
            }

            if (errMsg == "") {
                return true;
            }
            else {
                $.alert({
                    title: 'Alert',
                    content: errMsg,
                    animation: 'none',
                    type: 'dark'


                });
                return false;
            }
        }


    });

    function GetNotification() {
        if ($("#txtRoleId").val() == 3) {
            $.ajax({
                type: 'GET',
                url: '/Home/GetNotification',
                data: { 'mentorId': $("#username").val() },
                success: function (response) {
                    var count = response.length;
                    if (count == 0) { $('span.count').html('') }
                    else {
                        $('span.count').html(count);
                    }

                },
                error: function (error) {
                    console.log(error);
                }
            });
        }
    }
    $(function () {
        // Click on notification icon for show notification
        $('span.noti').click(function (e) {
            e.stopPropagation();
            $('.noti-content').show();
            var count = 0;
            count = parseInt($('span.count').html()) || 0;
            //only load notification if not already loaded

            updateNotification();

            // $('span.count', this).html('&nbsp;');
        })
        // hide notifications
        $('html').click(function () {
            $('.noti-content').hide();
        })
        // update notification
        function updateNotification() {
            console.log("update notification")
            $('#notiContent').empty();
            $('#notiContent').append($('<li>Loading...</li>'));
            $.ajax({
                type: 'GET',
                url: '/Home/GetNotification',
                success: function (response) {
                    $('#notiContent').empty();
                    $('#notiContent').append('<li style="background:black; color:white"> Notifications</li>');
                    if (response.length == 0) {
                        $('#notiContent').append($('<li>No unread comments </li>'));
                    }
                    $.each(response, function (index, value) {
                        var id = value.cmtId;
                        $('#notiContent').append($('<li><a href= "@Url.Action("getWeeklyTaskById", "ProjTask", new { ProjId = "PId", Internid = "Iid", WeekId = "WId"})"'.replace("PId", value.projId).replace("Iid", value.internId).replace("WId", value.weekId) + ' >' + value.internId + ' added a comment to week ' + value.weekId + ' </a></li>'));
                    });
                    //$('#notiContent').append('<li style="background:grey; color:white"><a href="@Url.Action("getAllComNot","Comment",new { mentorId = "mentID" })"'.replace("mentID",getUserId())+'> See All </a></li>');
                },
                error: function (error) {
                    console.log(error);
                }
            })
        }
        // update notification count
        function updateNotificationCount() {
            var count = 0;
            count = parseInt($('span.count').html()) || 0;
            count++;
            if (count == 0) { $('span.count').html('') }
            else {
                $('span.count').html(count);
            }
        }
        // signalr js code for start hub and send receive notification
        var notificationHub = $.connection.CommentHub;
        $.connection.hub.start().done(function () {
            console.log('Notification hub started');
        });
        //signalr method for push server message to client
        notificationHub.client.notify = function (message) {
            debugger
            if (message && message.toLowerCase() == getUserId()) {
                debugger;
                updateNotificationCount();
            }
        }
    })
</script>
